from detector.test import test_model
from detector.train import train_model

# 使用全0噪音向量训了得到的黑盒检测器:
# 0.91左右,拟合较好
invariant_noise_model1_path = "D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/detector/model/invariant_noise/resnet18_epoch20.pth"
# 0.87左右,过拟合
invariant_noise_model2_path = "D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/detector/model/invariant_noise/resnet18_epoch30.pth"
# 0.78左右,尚未完全拟合
invariant_noise_model3_path = "D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/detector/model/invariant_noise/resnet18_epoch15.pth"
# 0.75左右,过拟合?
invariant_noise_model4_path = "D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/detector/model/invariant_noise/resnet18_epoch25.pth"


# 使用随机噪音向量训了得到的黑盒检测器:
train_benign_path = 'D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/data/trial_ben.bmp/train'
train_malignant_path = 'D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/data/trial_mal.bmp/train'
test_benign_path = 'D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/data/trial_ben.bmp/test'
test_malignant_path = 'D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/data/trial_mal.bmp/test'

# best在80%
random_noise_model1_path = "D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/detector/model/random_noise/resnet18_epoch20_best.pth"
# 75.5%左右
random_noise_model2_path = "D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/detector/model/random_noise/resnet18_epoch22.pth"
# 75.5%左右
random_noise_model3_path = "D:/1University/stage 3/4Software Methodology/Research/Adversarial Example Generator/detector/model/random_noise/resnet18_epoch30_best.pth"

if __name__ == "__main__":
    # 训练模型:
    #train_model(random_noise_model3_path, 30, train_benign_path, train_malignant_path, test_benign_path, test_malignant_path)
    # 测试模型
    #test_model(random_noise_model3_path, test_benign_path, test_malignant_path)
